generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/*────────────────────────── MODELS ──────────────────────────*/

model Launch {
  launchAddress String @id            // 42-char hex
  tokenAddress  String
  description   String?
  twitterUrl    String?
  telegramUrl   String?
  websiteUrl    String?
  deployBlock   Int     @default(0)
  createdAt     DateTime @default(now())

  comments Comment[]
  trades   Trade[]
  priceBars PriceBar[]

  @@index([launchAddress])
}

model Profile {
  wallet      String @id              // 42-char hex
  avatarIndex Int
  comments    Comment[]
}

model Trade {
  id            Int     @id @default(autoincrement())
  launch        Launch  @relation(fields: [launchAddress], references: [launchAddress])
  launchAddress String
  wallet        String
  type          String              // “Buy” / “Sell”

  bnbAmount     Decimal  @default(0)  // numeric in Postgres
  tokenAmount   Decimal  @default(0)

  priceUsd      Decimal  @default(0)
  mcapUsd       Decimal  @default(0)

  txHash        String  @unique
  pending       Boolean @default(true)
  createdAt     DateTime @default(now())

  @@index([launchAddress, createdAt])
}

model Comment {
  id            Int     @id @default(autoincrement())
  launch        Launch  @relation(fields: [launchAddress], references: [launchAddress])
  launchAddress String

  parentId      Int?
  parent        Comment? @relation("CommentReplies", fields: [parentId], references: [id])
  replies       Comment[] @relation("CommentReplies")

  wallet        String
  profile       Profile @relation(fields: [wallet], references: [wallet])

  text          String
  createdAt     DateTime @default(now())

  @@index([launchAddress])
}

/*────────────────────────── NEW TABLE ───────────────────────*/

model PriceBar {
  id            Int     @id @default(autoincrement())

  launch        Launch  @relation(fields: [launchAddress], references: [launchAddress])
  launchAddress String

  bucketMs      BigInt              // start-of-minute, ms

  open          Decimal
  high          Decimal
  low           Decimal
  close         Decimal

  mcapUsd       Decimal             // 2-dec places fine

  @@unique([launchAddress, bucketMs])
  @@index([launchAddress, bucketMs])
}